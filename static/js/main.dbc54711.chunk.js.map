{"version":3,"sources":["helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/selectionSort.js","components/Buttons.js","components/Bar.js","components/Bars.js","components/Radio.js","components/NavBar.js","components/Visualizer.js","App.js","index.js"],"names":["playOrPause","animations","stepPosition","steps","length","className","aria-hidden","sortingSpeed","slow","medium","fast","swap","arr","a","b","temp","bubbleSort","array","colors","slice","colorState","i","j","push","Array","fill","mergeHelper","arrayLeft","arrayRight","position","result","shift","createSteps","updateColor","start","end","step","splice","mergeSort","mid","Math","floor","left","right","selectionSort","color","len","min","tmp","Buttons","clickHandler","title","item","disabled","onClick","Bar","height","index","style","backgroundColor","Bars","colorStep","colorIdx","0","1","2","3","map","num","colorBar","obj","Radio","speed","key","type","name","value","checked","onChange","options","label","NavBar","dropDownSelect","radioSelect","selectAlgo","changeNumberOfBars","numberOfBars","algo","useState","selectedOption","setSelectedOption","customStyles","placeholder","defaultStyles","option","provided","state","borderBottom","isSelected","padding","fontSize","control","width","background","border","borderRadius","singleValue","opacity","transition","styles","id","max","Visualizer","setArr","setNumberOfBars","setSteps","setSpeed","setStepPosition","setColors","setAnimations","setSelectAlgo","setAlgo","stepRef","useRef","current","useEffect","resetArray","stepSet","colorSet","setupAnimation","algorithm","bubbleSortAnimation","mergeSortAnimation","selectionSortAnimation","animationChoice","n","clear","random","createArray","forEach","animation","clearTimeout","startAnimation","animationSpeed","setTimeout","selectedOptionValue","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbc54711.chunk.js","sourcesContent":["const setRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst createArray = (n) => {\n  const arr = [];\n  for (let i = 0; i < n; i++) {\n    arr.push(setRandomNumber(5, 1000));\n  }\n  return arr;\n};\n\nconst playOrPause = (animations, stepPosition, steps) => {\n  if (stepPosition === steps.length - 1 && steps.length !== 1) {\n    return <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>;\n  } else\n    return animations.length > 0 ? (\n      <i className=\"fa fa-pause\" aria-hidden=\"true\"></i>\n    ) : (\n      <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\n    );\n};\n\nconst sortingSpeed = {\n  'Bubble Sort': {\n    slow: 60,\n    medium: 20,\n    fast: 7,\n  },\n  'Merge Sort': {\n    slow: 60,\n    medium: 30,\n    fast: 10,\n  },\n  'Selection Sort': {\n    slow: 60,\n    medium: 20,\n    fast: 10,\n  },\n};\n\nconst animationChoice = (\n  algorithm,\n  bubbleSortAnimation,\n  mergeSortAnimation,\n  selectionSortAnimation\n) => {\n  switch (algorithm) {\n    case 'Bubble Sort':\n      bubbleSortAnimation();\n      break;\n    case 'Merge Sort':\n      mergeSortAnimation();\n      break;\n    case 'Selection Sort':\n      selectionSortAnimation();\n      break;\n    default:\n      return;\n  }\n};\nexport {\n  setRandomNumber,\n  createArray,\n  playOrPause,\n  sortingSpeed,\n  animationChoice,\n};\n","const bubbleSort = (array, steps, colors) => {\n  let arr = array.slice();\n  let colorState = colors[colors.length - 1].slice();\n\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        arr = swap(arr, j, j + 1);\n      }\n      steps.push(arr.slice());\n      colorState[j] = 1;\n      colorState[j + 1] = 1;\n      colors.push(colorState.slice());\n      colorState[j] = 0;\n      colorState[j + 1] = 0;\n    }\n    colorState[arr.length - 1 - i] = 2;\n    steps.push(arr.slice());\n    colors.push(colorState.slice());\n  }\n  colors[colors.length - 1] = new Array(arr.length).fill(3);\n};\n\nconst swap = (arr, a, b) => {\n  const temp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = temp;\n  return arr;\n};\n\nexport default bubbleSort;\n","const mergeSort = (array, position, steps, colors) => {\n  if (array.length === 1) return array;\n  let mid = Math.floor(array.length / 2);\n  let left = array.slice(0, mid);\n  let right = array.slice(mid);\n  let arrayLeft = mergeSort(left, position, steps, colors);\n  let arrayRight = mergeSort(right, position + mid, steps, colors);\n  let result = mergeHelper(arrayLeft, arrayRight, position, steps, colors);\n  steps.push(steps[steps.length - 1].slice());\n  colors.push(\n    colors[colors.length - 1].fill(result.length === steps[0].length ? 3 : 0)\n  );\n  return result;\n};\n\nconst mergeHelper = (arrayLeft, arrayRight, position, steps, colors) => {\n  let result = [];\n  let i = 0,\n    j = 0;\n\n  while (arrayLeft.length > 0 && arrayRight.length > 0) {\n    if (arrayLeft[i] < arrayRight[j]) {\n      result.push(arrayLeft.shift());\n      createSteps(result, position, steps);\n    } else {\n      result.push(arrayRight.shift());\n      createSteps(result, position, steps);\n    }\n    updateColor(position, colors, result.length - 1, [], []);\n  }\n  if (arrayLeft.length !== 0 || arrayRight.length !== 0) {\n    updateColor(position, colors, result.length, arrayLeft, arrayRight);\n    result = [...result, ...arrayLeft];\n    result = [...result, ...arrayRight];\n    createSteps(result, position, steps);\n  }\n  return result;\n};\n\nconst updateColor = (position, colors, start, arrayLeft, arrayRight) => {\n  let colorState = colors[colors.length - 1].slice();\n  let end = position + start + arrayLeft.length + arrayRight.length;\n  start = start + position;\n  end === start\n    ? colorState.fill(1, start, end + 1)\n    : colorState.fill(1, start, end);\n  colors.push(colorState);\n};\n\nconst createSteps = (result, position, steps) => {\n  let step = steps[steps.length - 1].slice();\n  step.splice(position, result.length, ...result);\n  steps.push(step);\n};\n\nexport default mergeSort;\n","let selectionSort = (array, steps, color) => {\n  let arr = array.slice();\n  let len = arr.length;\n  let colorState = color[color.length - 1].slice();\n  for (let i = 0; i < len; i++) {\n    let min = i;\n    for (let j = i + 1; j < len; j++) {\n      colorState[min] = 1;\n      colorState[j] = 1;\n      if (arr[min] > arr[j]) {\n        colorState[min] = 0;\n        min = j;\n      }\n      steps.push(arr.slice());\n      color.push(colorState.slice());\n      colorState[j] = 0;\n    }\n\n    if (min !== i) {\n      let tmp = arr[i];\n      arr[i] = arr[min];\n      arr[min] = tmp;\n    }\n    colorState[min] = 0;\n    colorState[i] = 2;\n    steps.push(arr.slice());\n    if (i === arr.length - 1) {\n      color.push(new Array(arr.length).fill(3));\n    } else {\n      color.push(colorState.slice());\n    }\n  }\n  return arr;\n};\n\nexport default selectionSort;\n","import React from 'react';\n\nexport default function Buttons({ clickHandler, title, item, disabled }) {\n  return (\n    <button\n      className=\"myButton\"\n      onClick={() => clickHandler(item)}\n      disabled={disabled}\n    >\n      {title}\n    </button>\n  );\n}\n","import React from 'react';\n\nexport default function Bar({ height, color, index }) {\n  const style = { height: `${height}%`, backgroundColor: color };\n  return <div className=\"bar-number\" key={index} style={style}></div>;\n}\n","import React from 'react';\nimport Bar from './Bar';\n\nexport default function Bars({ arr, colorStep }) {\n  if (!arr) return null;\n\n  //customize color of bars during sorting\n  //0 - initial\n  //1 - check\n  //2 - sorted position\n  //3 - final flourish\n  const colorIdx = {\n    0: 'whitesmoke',\n    1: 'red',\n    2: 'red',\n    3: 'red',\n  };\n\n  return (\n    <div className=\"bar-container\">\n      {arr.map((num, index) => {\n        const height = (num / 1000) * 100;\n        const colorBar = colorIdx[colorStep[index]];\n        return (\n          <Bar key={index} height={height} color={colorBar} index={index} />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nconst arr = ['slow', 'medium', 'fast'];\nconst obj = {\n  slow: '>',\n  medium: '>>',\n  fast: '>>>',\n};\nconst Radio = ({ clickHandler, speed }) => {\n  return (\n    <div className=\"radio-container\">\n      {arr.map((item, key) => {\n        return (\n          <label key={key} className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"animationSpeed\"\n              value={item}\n              checked={item === speed}\n              onChange={clickHandler}\n              key={key}\n            />\n            {obj[item]}\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Radio;\n","import React, { useState } from 'react';\nimport Select from 'react-select';\nimport Radio from './Radio';\n\nconst options = [\n  { value: 'Selection Sort', label: 'Selection Sort' },\n  { value: 'Bubble Sort', label: 'Bubble Sort' },\n  { value: 'Merge Sort', label: 'Merge Sort' },\n];\n\nconst NavBar = ({\n  dropDownSelect,\n  selectAlgo,\n  radioSelect,\n  speed,\n  changeNumberOfBars,\n  numberOfBars,\n  algo,\n}) => {\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const selectOnChange = (selectedOption) => {\n    setSelectedOption(selectedOption);\n    dropDownSelect(selectedOption.value);\n  };\n\n  const customStyles = {\n    placeholder: (defaultStyles) => {\n      return {\n        ...defaultStyles,\n        color: 'white',\n      };\n    },\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px solid black',\n      color: state.isSelected ? 'black' : 'whitesmoke',\n      padding: 20,\n      backgroundColor: state.isSelected ? 'whitesmoke' : 'black',\n      fontSize: 15,\n    }),\n    control: (provided) => ({\n      ...provided,\n      width: 155,\n      background: 'black',\n      border: '1px solid whitesmoke',\n      borderRadius: 3,\n      color: 'white',\n      height: 30,\n      fontSize: 15,\n    }),\n    singleValue: (provided, state) => {\n      const color = 'white';\n      const opacity = 1;\n      const transition = 'opacity 300ms';\n\n      return { ...provided, opacity, transition, color };\n    },\n  };\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <div className=\"logoWrapper\">\n          <span className=\"stylish\">Visual</span>\n          <span className=\"logo\">Sorting</span>\n        </div>\n        <div className=\"dropdown-nav\">\n          <Select\n            options={options}\n            value={selectedOption}\n            onChange={selectOnChange}\n            styles={customStyles}\n            placeholder=\"Algorithm\"\n          />\n        </div>\n        <div className=\"num-bar-nav\">\n          # of Bars\n          <input\n            id=\"bar-range\"\n            type=\"range\"\n            min=\"10\"\n            max=\"50\"\n            value={numberOfBars}\n            step=\"10\"\n            onChange={changeNumberOfBars}\n          />\n        </div>\n        <div className=\"speed-nav\">\n          Speed\n          <Radio clickHandler={radioSelect} speed={speed} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState, useRef } from 'react';\nimport {\n  createArray,\n  playOrPause,\n  sortingSpeed,\n  animationChoice,\n} from '../helpers';\nimport bubbleSort from '../algorithms/bubbleSort';\nimport mergeSort from '../algorithms/mergeSort';\nimport selectionSort from '../algorithms/selectionSort';\nimport Buttons from './Buttons';\nimport Bars from './Bars';\nimport Navbar from './NavBar';\nimport './Visualizer.css';\n\nconst Visualizer = () => {\n  const [arr, setArr] = useState([]);\n  const [numberOfBars, setNumberOfBars] = useState(30);\n  const [steps, setSteps] = useState([]);\n  const [speed, setSpeed] = useState('medium');\n  const [stepPosition, setStepPosition] = useState(0);\n  const [colors, setColors] = useState([]);\n  const [animations, setAnimations] = useState([]);\n  const [selectAlgo, setSelectAlgo] = useState([]);\n  const [algo, setAlgo] = useState('');\n  const stepRef = useRef(stepPosition);\n  stepRef.current = stepPosition;\n\n  useEffect(() => {\n    resetArray(numberOfBars);\n  }, [numberOfBars]);\n\n  useEffect(() => {\n    stepSet();\n    colorSet();\n  }, [arr]);\n\n  useEffect(() => {\n    setupAnimation(algo);\n  }, [algo]);\n\n  const colorSet = () => {\n    const temp = new Array(arr.length).fill(0);\n    setColors([temp]);\n  };\n  const stepSet = () => {\n    const temp = [[...arr]];\n    setSteps(temp);\n  };\n\n  const changeNumberOfBars = (e) => {\n    setNumberOfBars(e.target.value);\n  };\n\n  const dropDownSelect = (selectedOptionValue) => {\n    stepSet();\n    colorSet();\n    setStepPosition(0);\n    setAlgo(selectedOptionValue);\n  };\n\n  const radioSelect = (e) => {\n    clear();\n    setSpeed(e.target.value);\n  };\n\n  const setupAnimation = (algorithm) => {\n    animationChoice(\n      algorithm,\n      bubbleSortAnimation,\n      mergeSortAnimation,\n      selectionSortAnimation\n    );\n  };\n\n  //controls\n\n  const stepForward = () => {\n    if (stepPosition >= steps.length - 1) return;\n    clear();\n    setStepPosition(stepPosition + 1);\n  };\n  const playOrPauseHandler = () => {\n    if (stepPosition === steps.length - 1 && steps.length !== 1) {\n      setStepPosition(0);\n      startAnimation();\n      return;\n    }\n    animations.length > 0 ? clear() : startAnimation();\n  };\n  const stepBack = () => {\n    if (stepPosition <= 0) return;\n    clear();\n    setStepPosition(stepPosition - 1);\n  };\n\n  const resetArray = (n) => {\n    clear();\n    const arr = createArray(n);\n    setArr(arr);\n    setStepPosition(0);\n    setSelectAlgo(['Selection Sort', 'Bubble Sort', 'Merge Sort']);\n  };\n\n  const selectionSortAnimation = () => {\n    clear();\n    let a = [...arr];\n    selectionSort(a, steps, colors);\n  };\n\n  const bubbleSortAnimation = () => {\n    clear();\n    let a = [...arr];\n    bubbleSort(a, steps, colors);\n  };\n\n  const mergeSortAnimation = () => {\n    clear();\n    let a = [...arr];\n    mergeSort(a, 0, steps, colors);\n  };\n\n  const clear = () => {\n    animations.forEach((animation) => clearTimeout(animation));\n    setAnimations([]);\n  };\n\n  const startAnimation = () => {\n    if (steps.length === 1) {\n      setupAnimation(algo);\n    }\n    const animationSpeed = sortingSpeed[algo][speed] || 30;\n    clear();\n    const arr = [];\n    for (let i = 0; i < steps.length - stepPosition - 1; i++) {\n      let animation = setTimeout(() => {\n        setStepPosition(stepRef.current + 1);\n      }, i * animationSpeed);\n      arr.push(animation);\n    }\n    setAnimations(arr);\n  };\n\n  return (\n    <div className=\"container\">\n      <Navbar\n        dropDownSelect={dropDownSelect}\n        selectAlgo={selectAlgo}\n        radioSelect={radioSelect}\n        speed={speed}\n        changeNumberOfBars={changeNumberOfBars}\n        numberOfBars={numberOfBars}\n        algo={algo}\n      />\n      <div className=\"controls-container\">\n        <Buttons clickHandler={resetArray} title=\"Reset\" item={numberOfBars} />\n        <Buttons\n          clickHandler={stepBack}\n          title={<i className=\"fa fa-chevron-left\"></i>}\n        />\n        <Buttons\n          clickHandler={playOrPauseHandler}\n          title={playOrPause(animations, stepPosition, steps)}\n          item={algo}\n          disabled={algo === ''}\n        />\n        <Buttons\n          clickHandler={stepForward}\n          title={<i className=\"fa fa-chevron-right\"></i>}\n        />\n      </div>\n      <Bars arr={steps[stepPosition]} colorStep={colors[stepPosition]} />\n    </div>\n  );\n};\n\nexport default Visualizer;\n","import './App.css';\nimport Visualizer from './components/Visualizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}